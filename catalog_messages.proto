syntax = "proto3";
package picar_catalog;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "./pb";

message Make {
  int32 id = 1;
  string short_id = 2;
  string name = 3;
  string logo = 4;
  bool active = 5;
  string infocar_code = 6;
  string eurotax_code = 7;
  string logo_url = 8;
}

message ShortFuelType {
  int32 id = 1;
  string name = 2;
}

message ShortBodyType {
  int32 id = 1;
  string name = 2;
}

message Model {
  string id = 1;
  int32 make_id = 2;
  string name = 3;
  google.protobuf.Timestamp sales_start = 4;
  google.protobuf.Timestamp sales_end = 5;
  int32 body_type_id = 6;
  string image_key = 7;
  string infocar_code = 8;
  string eurotax_code = 9;
  string image_url = 10;
  ShortBodyType body_type = 11;
  repeated ShortFuelType available_fuel_types = 12;
  int64 starting_price = 13;
}

message ContentImage {
  string key = 1;
  string url = 2;
  string image_descriptor = 3;
  bool has_priority = 4;
}

message ModelsByMakeRequest {
  int32 make_id = 1;
  google.protobuf.BoolValue sellable_only = 2;
}

message GetMakesResponse {
  repeated Make makes = 1;
}

message GetModelsResponse {
  Make make = 1;
  repeated Model models = 2;
}

message ShortHomologationClass {
  int32 id = 1;
  string name = 2;
}

message VersionsByModelRequest {
  string model_id = 1;
}

message Modelyear {
  string id = 1;
  string name = 2;
  google.protobuf.Timestamp sales_start = 3;
  google.protobuf.Timestamp sales_end = 4;
  bool is_restyling = 5;
  string series_id = 6;
  int32 series_number = 7;
  repeated ContentImage images = 8;
}

message ListedVersion {
  string id = 1;
  string name = 2;
  string version_code = 3;
  string make_public_id = 4;
  int32 hp = 5;
  int32 kw = 6;
  int32 seats = 7;
  int32 doors = 8;
  double fuel_consumption_wltp_max = 9;
  double emissions_wltp = 10;
  string drive = 11;
  string gearbox_type = 12;
  int32 gears = 13;
  ShortHomologationClass homologation_class = 14;
  int64 starting_price = 15;
  string model_id = 16;
  string model_name = 17;
  int32 make_id = 18;
  ShortFuelType fuel_type = 19;
  string image_key = 20;
  string image_url = 21;
  string modelyear = 22;
  string infocar_code = 23;
  string eurotax_code = 24;
  bool has_ev_data = 25;
  bool is_ev = 26;
  double ev_consumption_wltp_max = 27;
  double ev_battery_size = 28;
}

message GetVersionsByModelResponse {
  Model model = 1;
  Modelyear current_modelyear = 2;
  repeated ListedVersion versions = 3;
}

message CarBodyData {
  int32 height = 1;
  int32 width = 2;
  int32 length = 3;
  int32 weight = 4;
  int32 transport_capacity = 5;
  int32 max_trunk = 6;
  int32 min_trunk = 7;
  int32 seats = 8;
  int32 doors = 9;
}

message FuelSystemData {
  double fuel_consumption_wltp_max = 1;
  double fuel_consumption_wltp_min = 2;
  double emissions_wltp = 3;
  int32 ev_kw = 4;
  double ev_consumption_wltp_max = 5;
  double ev_consumption_wltp_min = 6;
  double tank_capacity = 7;
  double ev_battery_capacity = 8;
  bool is_ev = 9;
  bool is_electrified = 10;
}

message CarPowertrainData {
  string engine_name = 1;
  int32 hp = 2;
  int32 kw = 3;
  int32 ev_kw = 4;
  int32 kw_legal = 5;
  int32 max_speed = 6;
  int32 max_torque = 7;
  int32 max_torque_rpm = 8;
  double acceleration = 9;
  int32 cylinders = 10;
  int32 displacement = 11;
  string displacement_name = 12;
  string drive = 13;
  int32 gears = 14;
  string gearbox_type = 15;
  string gearbox_name = 16;
  int32 warranty_years = 17;
  int32 warranty_km = 18;
  int32 combustion_kw = 19;
  string powertrain_notes = 20;
  double fuel_consumption_wltp_max = 21;
  double fuel_consumption_wltp_min = 22;
  double emissions_wltp = 23;
  double ev_consumption_wltp_max = 25;
  double ev_consumption_wltp_min = 26;
  double tank_capacity = 27;
  double ev_battery_capacity = 28;
  bool is_ev = 29;
  bool is_electrified = 30;
}

message DetailedCarVersion {
  string id = 1;
  string name = 2;
  string version_code = 3;
  string make_public_id = 4;
  string infocar_id = 5;
  string eurotax_id = 6;
  bool is_truck = 7;
  int32 trim_level = 8;
  string trimMakeId = 9;
  string trimName = 10;
  string trimDescription = 11;
  CarPowertrainData powertrain = 12;
  CarBodyData body = 13;
  int64 list_price = 14;
  google.protobuf.Timestamp list_price_date = 15;
  bool allow_new_driver = 16;
  ShortFuelType fuel_type = 17;
  ShortHomologationClass emission_omologation = 18;
  repeated ContentImage images = 19;
}

message VersionModelData {
  int32 make_id = 1;
  string make = 2;
  string model_id = 3;
  string model = 4;
  int32 series = 5;
  string modelyear = 6;
  google.protobuf.Timestamp sales_start = 7;
  google.protobuf.Timestamp sales_end = 8;
  repeated ContentImage images = 9;
}

message GetVersionDetailsRequest {
  string version_id = 1;
}

message GetVersionDetailsResponse {
  DetailedCarVersion version = 1;
  VersionModelData general_info = 2;
}

message CarFeature {
  string id = 1;
  int32 type_id = 2;
  string make_public_id = 3;
  string name = 4;
  string description = 5;
  bool standard = 6;
  string availability = 7;
  string type_description = 8;
  string normalized_description = 9;
  string category = 10;
  int64 list_price = 11;
  int32 normalized_code = 12;
  repeated WithFeatureDependency features_dependencies = 13;
  repeated WithPackDependency packs_dependencies = 14;
}

message WithFeatureDependency {
  string feature_id = 1;
  string dependency_type = 2;
}

message WithPackDependency {
  string pack_id = 1;
  string dependency_type = 2;
}

message GetVersionFeaturesRequest {
  string version_id = 1;
}

message ContainedCarFeature {
  string id = 1;
  int32 type_id = 2;
  string name = 3;
  string description = 4;
  string type_description = 5;
  string normalized_description = 6;
  int32 normalized_code = 7;
  string category = 8;
}

message CarFeaturePack {
  string id = 1;
  string make_public_id = 2;
  string name = 3;
  string description = 4;
  bool standard = 5;
  string availability = 6;
  int64 list_price = 7;
  repeated ContainedCarFeature content = 8;
  repeated WithFeatureDependency features_dependencies = 9;
  repeated WithPackDependency packs_dependencies = 10;
}

message PaintScheme {
  string id = 1;
  string name = 2;
  string make_public_id = 3;
  bool is_bicolor = 4;
  string display_color = 5;
  string secondary_color = 6;
  string availability = 7;
  int64 list_price = 8;
  bool standard = 9;
}

message GetVersionFeaturesResponse {
  repeated CarFeature features = 1;
  repeated CarFeaturePack packs = 2;
  repeated PaintScheme paint_schemes = 3;
}
