syntax = "proto3";
package picar_catalog;
option go_package="./pb";
import "google/protobuf/empty.proto";

message FuelType {
    int32 id = 1;
    string shortId = 2;
    string name = 3;
    bool isHybrid = 4;
    bool isEv = 5;
    string infocarCode = 6;
    string eurotaxCode = 7;
}

message BodyType {
    int32 id = 1;
    string typeName = 2;
}

message FeaturesType {
    int32 id = 1;
    string description = 2;
    int32 normalizedCode = 3;
    string normalizedDescription = 4;
    string featureGroup = 5;
    string category = 6;
    string infocarCode = 7;
    int32 eurotaxCode = 8;
}

message EmissionHomologation {
    int32 id = 1;
    string emissionName = 2;
    string infocarCode = 3;
    string eurotaxCode = 4;
}

message GearboxType {
    string id = 1;
    string name = 2;
}

message DriveType {
    string id = 1;
    string name = 2;
}

message FuelTypesResponse {
    repeated FuelType types = 1;
}

message BodyTypesResponse {
    repeated BodyType types = 1;
}

message FeaturesTypesResponse {
    repeated FeaturesType types = 1;
}

message EmissionHomologationsResponse {
    repeated EmissionHomologation types = 1;
}

message GearboxTypesResponse {
    repeated GearboxType types = 1;
}

message DriveTypesResponse {
    repeated DriveType types = 1;
}

service CarCatalog {
    rpc GetFuelTypes(google.protobuf.Empty) returns (FuelTypesResponse) {}
    rpc GetBodyTypes(google.protobuf.Empty) returns (BodyTypesResponse) {}
    rpc GetFeaturesTypes(google.protobuf.Empty) returns (FeaturesTypesResponse) {}
    rpc GetEmissionHomologations(google.protobuf.Empty) returns (EmissionHomologationsResponse) {}
    rpc GetGearboxTypes(google.protobuf.Empty) returns (GearboxTypesResponse) {}
    rpc GetDriveTypes(google.protobuf.Empty) returns (DriveTypesResponse) {}
}
